{"/home/travis/build/npmtest/node-npmtest-captchapng/test.js":"/* istanbul instrument in package npmtest_captchapng */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-captchapng/lib.npmtest_captchapng.js":"/* istanbul instrument in package npmtest_captchapng */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_captchapng = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_captchapng = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-captchapng/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-captchapng && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_captchapng */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_captchapng\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_captchapng.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_captchapng.rollup.js'] =\n            local.assetsDict['/assets.npmtest_captchapng.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_captchapng.__dirname + '/lib.npmtest_captchapng.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-captchapng/node_modules/captchapng/lib/captchapng.js":"/**\r\n * captchapng\r\n * Captcha PNG generator\r\n * @Author: George Chan\r\n * @Email: gchan@21cn.com\r\n * @Version: 0.0.1\r\n * @Date: 2013-08-18\r\n * @license http://www.opensource.org/licenses/bsd-license.php BSD License\r\n */\r\n\r\nvar pnglib = require('pnglib');\r\nthis.numMask = [];\r\nthis.numMask[0]=[];\r\nthis.numMask[0]=loadNumMask0();\r\nthis.numMask[1]=loadNumMask1();\r\nmyself = this;\r\n\r\nfunction loadNumMask0() {\r\n    var numbmp=[];\r\n    numbmp[0]=[\"0011111000\",\"0111111110\",\"0111111110\",\"1110001111\",\"1110001111\",\"1110001111\",\"1110001111\",\"1110001111\",\"1110001111\",\"1110001111\",\"1110001111\",\"1110001111\",\"1110001111\",\"1110001111\",\"1110001111\",\"1110001111\",\"0111111111\",\" 111111110\",\"0011111100\"];\r\n    numbmp[1]=[\"0000011\",\"0000111\",\"0011111\",\"1111111\",\"1111111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\",\"0001111\"];\r\n    numbmp[2]=[\"001111100\",\"011111110\",\"111111111\",\"111001111\",\"111001111\",\"111001111\",\"111001111\",\"000011111\",\"000011110\",\"000111110\",\"000111100\",\"000111100\",\"001111000\",\"001111000\",\"011110000\",\"011110000\",\"111111111\",\"111111111\",\"111111111\"];\r\n    numbmp[3]=[\"0011111100\",\"0111111110\",\"1111111111\",\"1111001111\",\"1111001111\",\"1111001111\",\"0000001111\",\"0001111110\",\"0001111100\",\"0001111111\",\"0000001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111111111\",\"0111111110\",\"0011111100\"];\r\n    numbmp[4]=[\"00001111110\",\"00001111110\",\"00011111110\",\"00011111110\",\"00011111110\",\"00111011110\",\"00111011110\",\"00111011110\",\"01110011110\",\"01110011110\",\"01110011110\",\"11100011110\",\"11111111111\",\"11111111111\",\"11111111111\",\"11111111111\",\"00000011110\",\"00000011110\",\"00000011110\"];\r\n    numbmp[5]=[\"1111111111\",\"1111111111\",\"1111111111\",\"1111000000\",\"1111000000\",\"1111011100\",\"1111111110\",\"1111111111\",\"1111001111\",\"1111001111\",\"0000001111\",\"0000001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111111111\",\"0111111110\",\"0011111100\"];\r\n    numbmp[6]=[\"0011111100\",\"0111111110\",\"0111111111\",\"1111001111\",\"1111001111\",\"1111000000\",\"1111011100\",\"1111111110\",\"1111111111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"0111111111\",\"0111111110\",\"0011111100\"];\r\n    numbmp[7]=[\"11111111\",\"11111111\",\"11111111\",\"00001111\",\"00001111\",\"00001111\",\"00001110\",\"00001110\",\"00011110\",\"00011110\",\"00011110\",\"00011100\",\"00111100\",\"00111100\",\"00111100\",\"00111100\",\"00111000\",\"01111000\",\"01111000\"];\r\n    numbmp[8]=[\"0011111100\",\"0111111110\",\"1111111111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"0111111110\",\"0011111100\",\"0111111110\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111111111\",\"0111111110\",\"0011111100\"];\r\n    numbmp[9]=[\"0011111100\",\"0111111110\",\"1111111111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111001111\",\"1111111111\",\"0111111111\",\"0011101111\",\"0000001111\",\"1111001111\",\"1111001111\",\"1111111110\",\"0111111110\",\"0011111000\"];\r\n\r\n    return numbmp;\r\n}\r\n\r\nfunction loadNumMask1() {\r\n    var numbmp=[];\r\n    numbmp[0] = [\"000000001111000\",\"000000111111110\",\"000001110000110\",\"000011000000011\",\"000110000000011\",\"001100000000011\",\"011100000000011\",\"011000000000011\",\"111000000000110\",\"110000000000110\",\"110000000001110\",\"110000000001100\",\"110000000011000\",\"110000000111000\",\"011000011110000\",\"011111111000000\",\"000111110000000\"];\r\n    numbmp[1] = [\"00000111\",\"00001111\",\"00011110\",\"00010110\",\"00001100\",\"00001100\",\"00011000\",\"00011000\",\"00110000\",\"00110000\",\"00110000\",\"01100000\",\"01100000\",\"01100000\",\"11000000\",\"11000000\",\"11000000\"];\r\n    numbmp[2] = [\"00000011111000\",\"00001111111110\",\"00011100000110\",\"00011000000011\",\"00000000000011\",\"00000000000011\",\"00000000000011\",\"00000000000110\",\"00000000001110\",\"00000000011100\",\"00000001110000\",\"00000111100000\",\"00001110000000\",\"00111100000000\",\"01110000000000\",\"11111111110000\",\"11111111111110\",\"00000000011110\"];\r\n    numbmp[3] = [\"000000111111000\",\"000011111111110\",\"000111100000111\",\"000110000000011\",\"000000000000011\",\"000000000000011\",\"000000000001110\",\"000000111111000\",\"000000111111000\",\"000000000011100\",\"000000000001100\",\"000000000001100\",\"110000000001100\",\"111000000011100\",\"111100000111000\",\"001111111110000\",\"000111111000000\"];\r\n    numbmp[4] = [\"00000011000001\",\"00000110000011\",\"00001100000010\",\"00011000000110\",\"00111000000110\",\"00110000001100\",\"01100000001100\",\"01100000001000\",\"11000000011000\",\"11111111111111\",\"11111111111111\",\"00000000110000\",\"00000000110000\",\"00000000100000\",\"00000001100000\",\"00000001100000\",\"00000001100000\"];\r\n    numbmp[5] = [\"0000001111111111\",\"0000011111111111\",\"0000111000000000\",\"0000110000000000\",\"0000110000000000\",\"0001110000000000\",\"0001101111100000\",\"0001111111111000\",\"0001110000011000\",\"0000000000001100\",\"0000000000001100\",\"0000000000001100\",\"1100000000001100\",\"1110000000011000\",\"1111000001111000\",\"0111111111100000\",\"0001111110000000\"];\r\n    numbmp[6] = [\"000000001111100\",\"000000111111110\",\"000011110000111\",\"000111000000011\",\"000110000000000\",\"001100000000000\",\"011001111100000\",\"011111111111000\",\"111110000011000\",\"111000000001100\",\"110000000001100\",\"110000000001100\",\"110000000001100\",\"111000000011000\",\"011100001110000\",\"001111111100000\",\"000111110000000\"];\r\n    numbmp[7] = [\"1111111111111\",\"1111111111111\",\"0000000001110\",\"0000000011100\",\"0000000111000\",\"0000000110000\",\"0000001100000\",\"0000011100000\",\"0000111000000\",\"0000110000000\",\"0001100000000\",\"0011100000000\",\"0011000000000\",\"0111000000000\",\"1110000000000\",\"1100000000000\",\"1100000000000\"];\r\n    numbmp[8] = [\"0000000111110000\",\"0000011111111100\",\"0000011000001110\",\"0000110000000111\",\"0000110000011111\",\"0000110001111000\",\"0000011111100000\",\"0000011110000000\",\"0001111111000000\",\"0011100011100000\",\"0111000001110000\",\"1110000000110000\",\"1100000000110000\",\"1100000001110000\",\"1110000011100000\",\"0111111111000000\",\"0001111100000000\"];\r\n    numbmp[9] = [\"0000011111000\",\"0001111111110\",\"0011100000110\",\"0011000000011\",\"0110000000011\",\"0110000000011\",\"0110000000011\",\"0110000000111\",\"0011000011110\",\"0011111111110\",\"0000111100110\",\"0000000001100\",\"0000000011000\",\"0000000111000\",\"0000011110000\",\"1111111000000\",\"1111110000000\"];\r\n    return numbmp;\r\n}\r\n\r\n\r\nfunction captchapng(width,height,dispNumber) {\r\n    this.width   = width;\r\n    this.height  = height;\r\n    this.depth   = 8;\r\n    this.dispNumber = \"\"+dispNumber.toString();\r\n    this.widthAverage = parseInt(this.width/this.dispNumber.length);\r\n\r\n    var p = new pnglib(this.width,this.height,this.depth);\r\n\r\n    for (var numSection=0;numSection<this.dispNumber.length;numSection++){\r\n\r\n        var dispNum = this.dispNumber[numSection].valueOf();\r\n\r\n        var font = parseInt(Math.random()*myself.numMask.length);\r\n        font = (font>=myself.numMask.length?0:font);\r\n        //var random_x_offs = 0, random_y_offs = 0;\r\n        var random_x_offs = parseInt(Math.random()*(this.widthAverage - myself.numMask[font][dispNum][0].length));\r\n        var random_y_offs = parseInt(Math.random()*(this.height - myself.numMask[font][dispNum].length));\r\n        random_x_offs = (random_x_offs<0?0:random_x_offs);\r\n        random_y_offs = (random_y_offs<0?0:random_y_offs);\r\n\r\n        for (var i=0;(i<myself.numMask[font][dispNum].length) && ((i+random_y_offs)<this.height);i++){\r\n            var lineIndex = p.index(this.widthAverage * numSection + random_x_offs,i+random_y_offs);\r\n            for (var j=0;j<myself.numMask[font][dispNum][i].length;j++){\r\n                if ((myself.numMask[font][dispNum][i][j]=='1') && (this.widthAverage * numSection + random_x_offs+j)<this.width){\r\n                    p.buffer[lineIndex+j]='\\x01';\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return p;\r\n}\r\n\r\nmodule.exports = captchapng;\r\n"}